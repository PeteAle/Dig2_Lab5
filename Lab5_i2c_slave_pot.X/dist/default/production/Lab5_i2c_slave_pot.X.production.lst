

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Tue Feb 25 14:50:47 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	text6,local,class=CODE,merge=1,delta=2
    14                           	psect	text7,local,class=CODE,merge=1,delta=2
    15                           	psect	text8,local,class=CODE,merge=1,delta=2
    16                           	psect	intentry,global,class=CODE,delta=2
    17                           	dabs	1,0x7E,2
    18  0000                     
    19                           ; Version 2.10
    20                           ; Generated 31/07/2019 GMT
    21                           ; 
    22                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F887 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     	;# 
    54  0001                     	;# 
    55  0002                     	;# 
    56  0003                     	;# 
    57  0004                     	;# 
    58  0005                     	;# 
    59  0006                     	;# 
    60  0007                     	;# 
    61  0008                     	;# 
    62  0009                     	;# 
    63  000A                     	;# 
    64  000B                     	;# 
    65  000C                     	;# 
    66  000D                     	;# 
    67  000E                     	;# 
    68  000E                     	;# 
    69  000F                     	;# 
    70  0010                     	;# 
    71  0011                     	;# 
    72  0012                     	;# 
    73  0013                     	;# 
    74  0014                     	;# 
    75  0015                     	;# 
    76  0015                     	;# 
    77  0016                     	;# 
    78  0017                     	;# 
    79  0018                     	;# 
    80  0019                     	;# 
    81  001A                     	;# 
    82  001B                     	;# 
    83  001B                     	;# 
    84  001C                     	;# 
    85  001D                     	;# 
    86  001E                     	;# 
    87  001F                     	;# 
    88  0081                     	;# 
    89  0085                     	;# 
    90  0086                     	;# 
    91  0087                     	;# 
    92  0088                     	;# 
    93  0089                     	;# 
    94  008C                     	;# 
    95  008D                     	;# 
    96  008E                     	;# 
    97  008F                     	;# 
    98  0090                     	;# 
    99  0091                     	;# 
   100  0092                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0094                     	;# 
   105  0095                     	;# 
   106  0096                     	;# 
   107  0097                     	;# 
   108  0098                     	;# 
   109  0099                     	;# 
   110  009A                     	;# 
   111  009B                     	;# 
   112  009C                     	;# 
   113  009D                     	;# 
   114  009E                     	;# 
   115  009F                     	;# 
   116  0105                     	;# 
   117  0107                     	;# 
   118  0108                     	;# 
   119  0109                     	;# 
   120  010C                     	;# 
   121  010C                     	;# 
   122  010D                     	;# 
   123  010E                     	;# 
   124  010F                     	;# 
   125  0185                     	;# 
   126  0187                     	;# 
   127  0188                     	;# 
   128  0189                     	;# 
   129  018C                     	;# 
   130  018D                     	;# 
   131  0000                     	;# 
   132  0001                     	;# 
   133  0002                     	;# 
   134  0003                     	;# 
   135  0004                     	;# 
   136  0005                     	;# 
   137  0006                     	;# 
   138  0007                     	;# 
   139  0008                     	;# 
   140  0009                     	;# 
   141  000A                     	;# 
   142  000B                     	;# 
   143  000C                     	;# 
   144  000D                     	;# 
   145  000E                     	;# 
   146  000E                     	;# 
   147  000F                     	;# 
   148  0010                     	;# 
   149  0011                     	;# 
   150  0012                     	;# 
   151  0013                     	;# 
   152  0014                     	;# 
   153  0015                     	;# 
   154  0015                     	;# 
   155  0016                     	;# 
   156  0017                     	;# 
   157  0018                     	;# 
   158  0019                     	;# 
   159  001A                     	;# 
   160  001B                     	;# 
   161  001B                     	;# 
   162  001C                     	;# 
   163  001D                     	;# 
   164  001E                     	;# 
   165  001F                     	;# 
   166  0081                     	;# 
   167  0085                     	;# 
   168  0086                     	;# 
   169  0087                     	;# 
   170  0088                     	;# 
   171  0089                     	;# 
   172  008C                     	;# 
   173  008D                     	;# 
   174  008E                     	;# 
   175  008F                     	;# 
   176  0090                     	;# 
   177  0091                     	;# 
   178  0092                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0094                     	;# 
   183  0095                     	;# 
   184  0096                     	;# 
   185  0097                     	;# 
   186  0098                     	;# 
   187  0099                     	;# 
   188  009A                     	;# 
   189  009B                     	;# 
   190  009C                     	;# 
   191  009D                     	;# 
   192  009E                     	;# 
   193  009F                     	;# 
   194  0105                     	;# 
   195  0107                     	;# 
   196  0108                     	;# 
   197  0109                     	;# 
   198  010C                     	;# 
   199  010C                     	;# 
   200  010D                     	;# 
   201  010E                     	;# 
   202  010F                     	;# 
   203  0185                     	;# 
   204  0187                     	;# 
   205  0188                     	;# 
   206  0189                     	;# 
   207  018C                     	;# 
   208  018D                     	;# 
   209  0000                     	;# 
   210  0001                     	;# 
   211  0002                     	;# 
   212  0003                     	;# 
   213  0004                     	;# 
   214  0005                     	;# 
   215  0006                     	;# 
   216  0007                     	;# 
   217  0008                     	;# 
   218  0009                     	;# 
   219  000A                     	;# 
   220  000B                     	;# 
   221  000C                     	;# 
   222  000D                     	;# 
   223  000E                     	;# 
   224  000E                     	;# 
   225  000F                     	;# 
   226  0010                     	;# 
   227  0011                     	;# 
   228  0012                     	;# 
   229  0013                     	;# 
   230  0014                     	;# 
   231  0015                     	;# 
   232  0015                     	;# 
   233  0016                     	;# 
   234  0017                     	;# 
   235  0018                     	;# 
   236  0019                     	;# 
   237  001A                     	;# 
   238  001B                     	;# 
   239  001B                     	;# 
   240  001C                     	;# 
   241  001D                     	;# 
   242  001E                     	;# 
   243  001F                     	;# 
   244  0081                     	;# 
   245  0085                     	;# 
   246  0086                     	;# 
   247  0087                     	;# 
   248  0088                     	;# 
   249  0089                     	;# 
   250  008C                     	;# 
   251  008D                     	;# 
   252  008E                     	;# 
   253  008F                     	;# 
   254  0090                     	;# 
   255  0091                     	;# 
   256  0092                     	;# 
   257  0093                     	;# 
   258  0093                     	;# 
   259  0093                     	;# 
   260  0094                     	;# 
   261  0095                     	;# 
   262  0096                     	;# 
   263  0097                     	;# 
   264  0098                     	;# 
   265  0099                     	;# 
   266  009A                     	;# 
   267  009B                     	;# 
   268  009C                     	;# 
   269  009D                     	;# 
   270  009E                     	;# 
   271  009F                     	;# 
   272  0105                     	;# 
   273  0107                     	;# 
   274  0108                     	;# 
   275  0109                     	;# 
   276  010C                     	;# 
   277  010C                     	;# 
   278  010D                     	;# 
   279  010E                     	;# 
   280  010F                     	;# 
   281  0185                     	;# 
   282  0187                     	;# 
   283  0188                     	;# 
   284  0189                     	;# 
   285  018C                     	;# 
   286  018D                     	;# 
   287  0000                     	;# 
   288  0001                     	;# 
   289  0002                     	;# 
   290  0003                     	;# 
   291  0004                     	;# 
   292  0005                     	;# 
   293  0006                     	;# 
   294  0007                     	;# 
   295  0008                     	;# 
   296  0009                     	;# 
   297  000A                     	;# 
   298  000B                     	;# 
   299  000C                     	;# 
   300  000D                     	;# 
   301  000E                     	;# 
   302  000E                     	;# 
   303  000F                     	;# 
   304  0010                     	;# 
   305  0011                     	;# 
   306  0012                     	;# 
   307  0013                     	;# 
   308  0014                     	;# 
   309  0015                     	;# 
   310  0015                     	;# 
   311  0016                     	;# 
   312  0017                     	;# 
   313  0018                     	;# 
   314  0019                     	;# 
   315  001A                     	;# 
   316  001B                     	;# 
   317  001B                     	;# 
   318  001C                     	;# 
   319  001D                     	;# 
   320  001E                     	;# 
   321  001F                     	;# 
   322  0081                     	;# 
   323  0085                     	;# 
   324  0086                     	;# 
   325  0087                     	;# 
   326  0088                     	;# 
   327  0089                     	;# 
   328  008C                     	;# 
   329  008D                     	;# 
   330  008E                     	;# 
   331  008F                     	;# 
   332  0090                     	;# 
   333  0091                     	;# 
   334  0092                     	;# 
   335  0093                     	;# 
   336  0093                     	;# 
   337  0093                     	;# 
   338  0094                     	;# 
   339  0095                     	;# 
   340  0096                     	;# 
   341  0097                     	;# 
   342  0098                     	;# 
   343  0099                     	;# 
   344  009A                     	;# 
   345  009B                     	;# 
   346  009C                     	;# 
   347  009D                     	;# 
   348  009E                     	;# 
   349  009F                     	;# 
   350  0105                     	;# 
   351  0107                     	;# 
   352  0108                     	;# 
   353  0109                     	;# 
   354  010C                     	;# 
   355  010C                     	;# 
   356  010D                     	;# 
   357  010E                     	;# 
   358  010F                     	;# 
   359  0185                     	;# 
   360  0187                     	;# 
   361  0188                     	;# 
   362  0189                     	;# 
   363  018C                     	;# 
   364  018D                     	;# 
   365  000B                     _INTCONbits	set	11
   366  0006                     _PORTB	set	6
   367  001E                     _ADRESH	set	30
   368  000C                     _PIR1bits	set	12
   369  001F                     _ADCON0bits	set	31
   370  0085                     _TRISA	set	133
   371  0089                     _TRISEbits	set	137
   372  008F                     _OSCCONbits	set	143
   373  008C                     _PIE1bits	set	140
   374  009F                     _ADCON1bits	set	159
   375  0188                     _ANSELbits	set	392
   376                           
   377                           ; #config settings
   378  0000                     
   379                           	psect	cinit
   380  000F                     start_initialization:	
   381  000F                     __initialization:	
   382                           
   383                           ; Clear objects allocated to COMMON
   384  000F  01F6               	clrf	__pbssCOMMON& (0+127)
   385  0010                     end_of_initialization:	
   386                           ;End of C runtime variable initialization code
   387                           
   388  0010                     __end_of__initialization:	
   389  0010  0183               	clrf	3
   390  0011  120A  118A  2922   	ljmp	_main	;jump to C main() function
   391                           
   392                           	psect	bssCOMMON
   393  0076                     __pbssCOMMON:	
   394  0076                     _pot:	
   395  0076                     	ds	1
   396                           
   397                           	psect	cstackCOMMON
   398  0070                     __pcstackCOMMON:	
   399  0070                     ?_setup:	
   400  0070                     ?_globalIntEnable:	
   401                           ; 1 bytes @ 0x0
   402                           
   403  0070                     ?_adcSetup:	
   404                           ; 1 bytes @ 0x0
   405                           
   406  0070                     ?_adcInterrupt:	
   407                           ; 1 bytes @ 0x0
   408                           
   409  0070                     ?_analogInSel:	
   410                           ; 1 bytes @ 0x0
   411                           
   412  0070                     ?_adcFoscSel:	
   413                           ; 1 bytes @ 0x0
   414                           
   415  0070                     ?_oscInit:	
   416                           ; 1 bytes @ 0x0
   417                           
   418  0070                     ?_isr:	
   419                           ; 1 bytes @ 0x0
   420                           
   421  0070                     ??_isr:	
   422                           ; 1 bytes @ 0x0
   423                           
   424  0070                     ?_main:	
   425                           ; 1 bytes @ 0x0
   426                           
   427                           
   428                           ; 1 bytes @ 0x0
   429  0070                     	ds	3
   430  0073                     ??_setup:	
   431  0073                     ??_globalIntEnable:	
   432                           ; 1 bytes @ 0x3
   433                           
   434  0073                     ??_adcSetup:	
   435                           ; 1 bytes @ 0x3
   436                           
   437  0073                     ??_adcInterrupt:	
   438                           ; 1 bytes @ 0x3
   439                           
   440  0073                     ??_analogInSel:	
   441                           ; 1 bytes @ 0x3
   442                           
   443  0073                     ??_adcFoscSel:	
   444                           ; 1 bytes @ 0x3
   445                           
   446  0073                     ??_oscInit:	
   447                           ; 1 bytes @ 0x3
   448                           
   449                           
   450                           ; 1 bytes @ 0x3
   451  0073                     	ds	2
   452  0075                     adcInterrupt@en:	
   453  0075                     analogInSel@analogIn:	
   454                           ; 1 bytes @ 0x5
   455                           
   456  0075                     adcFoscSel@fosc:	
   457                           ; 1 bytes @ 0x5
   458                           
   459  0075                     oscInit@freq:	
   460                           ; 1 bytes @ 0x5
   461                           
   462                           
   463                           ; 1 bytes @ 0x5
   464  0075                     	ds	1
   465  0076                     ??_main:	
   466                           
   467                           	psect	maintext
   468  0122                     __pmaintext:	
   469                           ; 1 bytes @ 0x6
   470 ;;
   471 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   472 ;;
   473 ;; *************** function _main *****************
   474 ;; Defined at:
   475 ;;		line 51 in file "Lab5_i2c_slave_pot_v1.c"
   476 ;; Parameters:    Size  Location     Type
   477 ;;		None
   478 ;; Auto vars:     Size  Location     Type
   479 ;;		None
   480 ;; Return value:  Size  Location     Type
   481 ;;                  1    wreg      void 
   482 ;; Registers used:
   483 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   484 ;; Tracked objects:
   485 ;;		On entry : B00/0
   486 ;;		On exit  : 0/0
   487 ;;		Unchanged: 0/0
   488 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   489 ;;      Params:         0       0       0       0       0
   490 ;;      Locals:         0       0       0       0       0
   491 ;;      Temps:          0       0       0       0       0
   492 ;;      Totals:         0       0       0       0       0
   493 ;;Total ram usage:        0 bytes
   494 ;; Hardware stack levels required when called:    2
   495 ;; This function calls:
   496 ;;		_adcFoscSel
   497 ;;		_adcInterrupt
   498 ;;		_adcSetup
   499 ;;		_analogInSel
   500 ;;		_globalIntEnable
   501 ;;		_oscInit
   502 ;;		_setup
   503 ;; This function is called by:
   504 ;;		Startup code after reset
   505 ;; This function uses a non-reentrant model
   506 ;;
   507                           
   508                           
   509                           ;psect for function _main
   510  0122                     _main:	
   511  0122                     l757:	
   512                           ;incstack = 0
   513                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   514                           
   515                           
   516                           ;Lab5_i2c_slave_pot_v1.c: 52:     setup();
   517  0122  120A  118A  21AD  120A  118A  	fcall	_setup
   518  0127                     l759:	
   519                           
   520                           ;Lab5_i2c_slave_pot_v1.c: 53:     oscInit(1);
   521  0127  3001               	movlw	1
   522  0128  120A  118A  20AD  120A  118A  	fcall	_oscInit
   523  012D                     l761:	
   524                           
   525                           ;Lab5_i2c_slave_pot_v1.c: 54:     adcSetup();
   526  012D  120A  118A  21B7  120A  118A  	fcall	_adcSetup
   527                           
   528                           ;Lab5_i2c_slave_pot_v1.c: 55:     analogInSel(5);
   529  0132  3005               	movlw	5
   530  0133  120A  118A  2014  120A  118A  	fcall	_analogInSel
   531                           
   532                           ;Lab5_i2c_slave_pot_v1.c: 56:     adcFoscSel(1);
   533  0138  3001               	movlw	1
   534  0139  120A  118A  2154  120A  118A  	fcall	_adcFoscSel
   535  013E                     l763:	
   536                           
   537                           ;Lab5_i2c_slave_pot_v1.c: 57:     globalIntEnable();
   538  013E  120A  118A  21C0  120A  118A  	fcall	_globalIntEnable
   539  0143                     l765:	
   540                           
   541                           ;Lab5_i2c_slave_pot_v1.c: 58:     adcInterrupt(1);
   542  0143  3001               	movlw	1
   543  0144  120A  118A  2179  120A  118A  	fcall	_adcInterrupt
   544  0149                     l767:	
   545                           
   546                           ;Lab5_i2c_slave_pot_v1.c: 60:         if (ADCON0bits.GO_DONE == 0){
   547  0149  1283               	bcf	3,5	;RP0=0, select bank0
   548  014A  1303               	bcf	3,6	;RP1=0, select bank0
   549  014B  189F               	btfsc	31,1	;volatile
   550  014C  294E               	goto	u21
   551  014D  294F               	goto	u20
   552  014E                     u21:	
   553  014E  2949               	goto	l767
   554  014F                     u20:	
   555  014F                     l769:	
   556                           
   557                           ;Lab5_i2c_slave_pot_v1.c: 61:             ADCON0bits.GO_DONE = 1;
   558  014F  149F               	bsf	31,1	;volatile
   559  0150  2949               	goto	l767
   560  0151  120A  118A  280C   	ljmp	start
   561  0154                     __end_of_main:	
   562                           
   563                           	psect	text1
   564  01AD                     __ptext1:	
   565 ;; *************** function _setup *****************
   566 ;; Defined at:
   567 ;;		line 67 in file "Lab5_i2c_slave_pot_v1.c"
   568 ;; Parameters:    Size  Location     Type
   569 ;;		None
   570 ;; Auto vars:     Size  Location     Type
   571 ;;		None
   572 ;; Return value:  Size  Location     Type
   573 ;;                  1    wreg      void 
   574 ;; Registers used:
   575 ;;		status,2
   576 ;; Tracked objects:
   577 ;;		On entry : 0/0
   578 ;;		On exit  : 0/0
   579 ;;		Unchanged: 0/0
   580 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   581 ;;      Params:         0       0       0       0       0
   582 ;;      Locals:         0       0       0       0       0
   583 ;;      Temps:          0       0       0       0       0
   584 ;;      Totals:         0       0       0       0       0
   585 ;;Total ram usage:        0 bytes
   586 ;; Hardware stack levels used:    1
   587 ;; Hardware stack levels required when called:    1
   588 ;; This function calls:
   589 ;;		Nothing
   590 ;; This function is called by:
   591 ;;		_main
   592 ;; This function uses a non-reentrant model
   593 ;;
   594                           
   595                           
   596                           ;psect for function _setup
   597  01AD                     _setup:	
   598  01AD                     l747:	
   599                           ;incstack = 0
   600                           ; Regs used in _setup: [status,2]
   601                           
   602                           
   603                           ;Lab5_i2c_slave_pot_v1.c: 68:     TRISEbits.TRISE0 = 1;
   604  01AD  1683               	bsf	3,5	;RP0=1, select bank1
   605  01AE  1303               	bcf	3,6	;RP1=0, select bank1
   606  01AF  1409               	bsf	9,0	;volatile
   607                           
   608                           ;Lab5_i2c_slave_pot_v1.c: 69:     ANSELbits.ANS5 = 1;
   609  01B0  1683               	bsf	3,5	;RP0=1, select bank3
   610  01B1  1703               	bsf	3,6	;RP1=1, select bank3
   611  01B2  1688               	bsf	8,5	;volatile
   612  01B3                     l749:	
   613                           
   614                           ;Lab5_i2c_slave_pot_v1.c: 70:     TRISA = 0x00;
   615  01B3  1683               	bsf	3,5	;RP0=1, select bank1
   616  01B4  1303               	bcf	3,6	;RP1=0, select bank1
   617  01B5  0185               	clrf	5	;volatile
   618  01B6                     l110:	
   619  01B6  0008               	return
   620  01B7                     __end_of_setup:	
   621                           
   622                           	psect	text2
   623  00AD                     __ptext2:	
   624 ;; *************** function _oscInit *****************
   625 ;; Defined at:
   626 ;;		line 11 in file "lib_osccon.c"
   627 ;; Parameters:    Size  Location     Type
   628 ;;  freq            1    wreg     unsigned char 
   629 ;; Auto vars:     Size  Location     Type
   630 ;;  freq            1    5[COMMON] unsigned char 
   631 ;; Return value:  Size  Location     Type
   632 ;;                  1    wreg      unsigned char 
   633 ;; Registers used:
   634 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   635 ;; Tracked objects:
   636 ;;		On entry : 0/0
   637 ;;		On exit  : 0/0
   638 ;;		Unchanged: 0/0
   639 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   640 ;;      Params:         0       0       0       0       0
   641 ;;      Locals:         1       0       0       0       0
   642 ;;      Temps:          2       0       0       0       0
   643 ;;      Totals:         3       0       0       0       0
   644 ;;Total ram usage:        3 bytes
   645 ;; Hardware stack levels used:    1
   646 ;; Hardware stack levels required when called:    1
   647 ;; This function calls:
   648 ;;		Nothing
   649 ;; This function is called by:
   650 ;;		_main
   651 ;; This function uses a non-reentrant model
   652 ;;
   653                           
   654                           
   655                           ;psect for function _oscInit
   656  00AD                     _oscInit:	
   657                           
   658                           ;incstack = 0
   659                           ; Regs used in _oscInit: [wreg-fsr0h+status,2+status,0]
   660                           ;oscInit@freq stored from wreg
   661  00AD  00F5               	movwf	oscInit@freq
   662  00AE                     l737:	
   663                           
   664                           ;lib_osccon.c: 12:     switch(freq){
   665  00AE  28FF               	goto	l741
   666  00AF                     l51:	
   667                           ;lib_osccon.c: 13:         case 0:
   668                           
   669                           
   670                           ;lib_osccon.c: 14:             OSCCONbits.IRCF2 = 1;
   671  00AF  1683               	bsf	3,5	;RP0=1, select bank1
   672  00B0  1303               	bcf	3,6	;RP1=0, select bank1
   673  00B1  170F               	bsf	15,6	;volatile
   674                           
   675                           ;lib_osccon.c: 15:             OSCCONbits.IRCF1 = 1;
   676  00B2  168F               	bsf	15,5	;volatile
   677                           
   678                           ;lib_osccon.c: 16:             OSCCONbits.IRCF0 = 1;
   679  00B3  160F               	bsf	15,4	;volatile
   680                           
   681                           ;lib_osccon.c: 17:             OSCCONbits.OSTS = 0;
   682  00B4  118F               	bcf	15,3	;volatile
   683                           
   684                           ;lib_osccon.c: 18:             OSCCONbits.HTS = 1;
   685  00B5  150F               	bsf	15,2	;volatile
   686                           
   687                           ;lib_osccon.c: 19:             OSCCONbits.LTS = 0;
   688  00B6  108F               	bcf	15,1	;volatile
   689                           
   690                           ;lib_osccon.c: 20:             OSCCONbits.SCS = 1;
   691  00B7  140F               	bsf	15,0	;volatile
   692                           
   693                           ;lib_osccon.c: 21:             break;
   694  00B8  2921               	goto	l60
   695  00B9                     l53:	
   696                           ;lib_osccon.c: 22:         case 1:
   697                           
   698                           
   699                           ;lib_osccon.c: 23:             OSCCONbits.IRCF2 = 1;
   700  00B9  1683               	bsf	3,5	;RP0=1, select bank1
   701  00BA  1303               	bcf	3,6	;RP1=0, select bank1
   702  00BB  170F               	bsf	15,6	;volatile
   703                           
   704                           ;lib_osccon.c: 24:             OSCCONbits.IRCF1 = 1;
   705  00BC  168F               	bsf	15,5	;volatile
   706                           
   707                           ;lib_osccon.c: 25:             OSCCONbits.IRCF0 = 0;
   708  00BD  120F               	bcf	15,4	;volatile
   709                           
   710                           ;lib_osccon.c: 26:             OSCCONbits.OSTS = 0;
   711  00BE  118F               	bcf	15,3	;volatile
   712                           
   713                           ;lib_osccon.c: 27:             OSCCONbits.HTS = 1;
   714  00BF  150F               	bsf	15,2	;volatile
   715                           
   716                           ;lib_osccon.c: 28:             OSCCONbits.LTS = 0;
   717  00C0  108F               	bcf	15,1	;volatile
   718                           
   719                           ;lib_osccon.c: 29:             OSCCONbits.SCS = 1;
   720  00C1  140F               	bsf	15,0	;volatile
   721                           
   722                           ;lib_osccon.c: 30:             break;
   723  00C2  2921               	goto	l60
   724  00C3                     l54:	
   725                           ;lib_osccon.c: 31:         case 2:
   726                           
   727                           
   728                           ;lib_osccon.c: 32:             OSCCONbits.IRCF2 = 1;
   729  00C3  1683               	bsf	3,5	;RP0=1, select bank1
   730  00C4  1303               	bcf	3,6	;RP1=0, select bank1
   731  00C5  170F               	bsf	15,6	;volatile
   732                           
   733                           ;lib_osccon.c: 33:             OSCCONbits.IRCF1 = 0;
   734  00C6  128F               	bcf	15,5	;volatile
   735                           
   736                           ;lib_osccon.c: 34:             OSCCONbits.IRCF0 = 1;
   737  00C7  160F               	bsf	15,4	;volatile
   738                           
   739                           ;lib_osccon.c: 35:             OSCCONbits.OSTS = 0;
   740  00C8  118F               	bcf	15,3	;volatile
   741                           
   742                           ;lib_osccon.c: 36:             OSCCONbits.HTS = 1;
   743  00C9  150F               	bsf	15,2	;volatile
   744                           
   745                           ;lib_osccon.c: 37:             OSCCONbits.LTS = 0;
   746  00CA  108F               	bcf	15,1	;volatile
   747                           
   748                           ;lib_osccon.c: 38:             OSCCONbits.SCS = 1;
   749  00CB  140F               	bsf	15,0	;volatile
   750                           
   751                           ;lib_osccon.c: 39:             break;
   752  00CC  2921               	goto	l60
   753  00CD                     l55:	
   754                           ;lib_osccon.c: 40:         case 3:
   755                           
   756                           
   757                           ;lib_osccon.c: 41:             OSCCONbits.IRCF2 = 1;
   758  00CD  1683               	bsf	3,5	;RP0=1, select bank1
   759  00CE  1303               	bcf	3,6	;RP1=0, select bank1
   760  00CF  170F               	bsf	15,6	;volatile
   761                           
   762                           ;lib_osccon.c: 42:             OSCCONbits.IRCF1 = 0;
   763  00D0  128F               	bcf	15,5	;volatile
   764                           
   765                           ;lib_osccon.c: 43:             OSCCONbits.IRCF0 = 0;
   766  00D1  120F               	bcf	15,4	;volatile
   767                           
   768                           ;lib_osccon.c: 44:             OSCCONbits.OSTS = 0;
   769  00D2  118F               	bcf	15,3	;volatile
   770                           
   771                           ;lib_osccon.c: 45:             OSCCONbits.HTS = 1;
   772  00D3  150F               	bsf	15,2	;volatile
   773                           
   774                           ;lib_osccon.c: 46:             OSCCONbits.LTS = 0;
   775  00D4  108F               	bcf	15,1	;volatile
   776                           
   777                           ;lib_osccon.c: 47:             OSCCONbits.SCS = 1;
   778  00D5  140F               	bsf	15,0	;volatile
   779                           
   780                           ;lib_osccon.c: 48:             break;
   781  00D6  2921               	goto	l60
   782  00D7                     l56:	
   783                           ;lib_osccon.c: 49:         case 4:
   784                           
   785                           
   786                           ;lib_osccon.c: 50:             OSCCONbits.IRCF2 = 0;
   787  00D7  1683               	bsf	3,5	;RP0=1, select bank1
   788  00D8  1303               	bcf	3,6	;RP1=0, select bank1
   789  00D9  130F               	bcf	15,6	;volatile
   790                           
   791                           ;lib_osccon.c: 51:             OSCCONbits.IRCF1 = 1;
   792  00DA  168F               	bsf	15,5	;volatile
   793                           
   794                           ;lib_osccon.c: 52:             OSCCONbits.IRCF0 = 1;
   795  00DB  160F               	bsf	15,4	;volatile
   796                           
   797                           ;lib_osccon.c: 53:             OSCCONbits.OSTS = 0;
   798  00DC  118F               	bcf	15,3	;volatile
   799                           
   800                           ;lib_osccon.c: 54:             OSCCONbits.HTS = 1;
   801  00DD  150F               	bsf	15,2	;volatile
   802                           
   803                           ;lib_osccon.c: 55:             OSCCONbits.LTS = 0;
   804  00DE  108F               	bcf	15,1	;volatile
   805                           
   806                           ;lib_osccon.c: 56:             OSCCONbits.SCS = 1;
   807  00DF  140F               	bsf	15,0	;volatile
   808                           
   809                           ;lib_osccon.c: 57:             break;
   810  00E0  2921               	goto	l60
   811  00E1                     l57:	
   812                           ;lib_osccon.c: 58:         case 5:
   813                           
   814                           
   815                           ;lib_osccon.c: 59:             OSCCONbits.IRCF2 = 0;
   816  00E1  1683               	bsf	3,5	;RP0=1, select bank1
   817  00E2  1303               	bcf	3,6	;RP1=0, select bank1
   818  00E3  130F               	bcf	15,6	;volatile
   819                           
   820                           ;lib_osccon.c: 60:             OSCCONbits.IRCF1 = 1;
   821  00E4  168F               	bsf	15,5	;volatile
   822                           
   823                           ;lib_osccon.c: 61:             OSCCONbits.IRCF0 = 0;
   824  00E5  120F               	bcf	15,4	;volatile
   825                           
   826                           ;lib_osccon.c: 62:             OSCCONbits.OSTS = 0;
   827  00E6  118F               	bcf	15,3	;volatile
   828                           
   829                           ;lib_osccon.c: 63:             OSCCONbits.HTS = 1;
   830  00E7  150F               	bsf	15,2	;volatile
   831                           
   832                           ;lib_osccon.c: 64:             OSCCONbits.LTS = 0;
   833  00E8  108F               	bcf	15,1	;volatile
   834                           
   835                           ;lib_osccon.c: 65:             OSCCONbits.SCS = 1;
   836  00E9  140F               	bsf	15,0	;volatile
   837                           
   838                           ;lib_osccon.c: 66:             break;
   839  00EA  2921               	goto	l60
   840  00EB                     l58:	
   841                           ;lib_osccon.c: 67:         case 6:
   842                           
   843                           
   844                           ;lib_osccon.c: 68:             OSCCONbits.IRCF2 = 0;
   845  00EB  1683               	bsf	3,5	;RP0=1, select bank1
   846  00EC  1303               	bcf	3,6	;RP1=0, select bank1
   847  00ED  130F               	bcf	15,6	;volatile
   848                           
   849                           ;lib_osccon.c: 69:             OSCCONbits.IRCF1 = 0;
   850  00EE  128F               	bcf	15,5	;volatile
   851                           
   852                           ;lib_osccon.c: 70:             OSCCONbits.IRCF0 = 1;
   853  00EF  160F               	bsf	15,4	;volatile
   854                           
   855                           ;lib_osccon.c: 71:             OSCCONbits.OSTS = 0;
   856  00F0  118F               	bcf	15,3	;volatile
   857                           
   858                           ;lib_osccon.c: 72:             OSCCONbits.HTS = 1;
   859  00F1  150F               	bsf	15,2	;volatile
   860                           
   861                           ;lib_osccon.c: 73:             OSCCONbits.LTS = 0;
   862  00F2  108F               	bcf	15,1	;volatile
   863                           
   864                           ;lib_osccon.c: 74:             OSCCONbits.SCS = 1;
   865  00F3  140F               	bsf	15,0	;volatile
   866                           
   867                           ;lib_osccon.c: 75:             break;
   868  00F4  2921               	goto	l60
   869  00F5                     l59:	
   870                           ;lib_osccon.c: 76:         case 7:
   871                           
   872                           
   873                           ;lib_osccon.c: 77:             OSCCONbits.IRCF2 = 0;
   874  00F5  1683               	bsf	3,5	;RP0=1, select bank1
   875  00F6  1303               	bcf	3,6	;RP1=0, select bank1
   876  00F7  130F               	bcf	15,6	;volatile
   877                           
   878                           ;lib_osccon.c: 78:             OSCCONbits.IRCF1 = 0;
   879  00F8  128F               	bcf	15,5	;volatile
   880                           
   881                           ;lib_osccon.c: 79:             OSCCONbits.IRCF0 = 0;
   882  00F9  120F               	bcf	15,4	;volatile
   883                           
   884                           ;lib_osccon.c: 80:             OSCCONbits.OSTS = 0;
   885  00FA  118F               	bcf	15,3	;volatile
   886                           
   887                           ;lib_osccon.c: 81:             OSCCONbits.HTS = 0;
   888  00FB  110F               	bcf	15,2	;volatile
   889                           
   890                           ;lib_osccon.c: 82:             OSCCONbits.LTS = 1;
   891  00FC  148F               	bsf	15,1	;volatile
   892                           
   893                           ;lib_osccon.c: 83:             OSCCONbits.SCS = 1;
   894  00FD  140F               	bsf	15,0	;volatile
   895                           
   896                           ;lib_osccon.c: 84:             break;
   897  00FE  2921               	goto	l60
   898  00FF                     l741:	
   899  00FF  0875               	movf	oscInit@freq,w
   900  0100  00F3               	movwf	??_oscInit
   901  0101  01F4               	clrf	??_oscInit+1
   902                           
   903                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   904                           ; Switch size 1, requested type "simple"
   905                           ; Number of cases is 1, Range of values is 0 to 0
   906                           ; switch strategies available:
   907                           ; Name         Instructions Cycles
   908                           ; simple_byte            4     3 (average)
   909                           ; direct_byte           11     8 (fixed)
   910                           ; jumptable            260     6 (fixed)
   911                           ;	Chosen strategy is simple_byte
   912  0102  0874               	movf	??_oscInit+1,w
   913  0103  3A00               	xorlw	0	; case 0
   914  0104  1903               	skipnz
   915  0105  2907               	goto	l851
   916  0106  2921               	goto	l60
   917  0107                     l851:	
   918                           
   919                           ; Switch size 1, requested type "simple"
   920                           ; Number of cases is 8, Range of values is 0 to 7
   921                           ; switch strategies available:
   922                           ; Name         Instructions Cycles
   923                           ; simple_byte           25    13 (average)
   924                           ; direct_byte           32     8 (fixed)
   925                           ; jumptable            260     6 (fixed)
   926                           ;	Chosen strategy is simple_byte
   927  0107  0873               	movf	??_oscInit,w
   928  0108  3A00               	xorlw	0	; case 0
   929  0109  1903               	skipnz
   930  010A  28AF               	goto	l51
   931  010B  3A01               	xorlw	1	; case 1
   932  010C  1903               	skipnz
   933  010D  28B9               	goto	l53
   934  010E  3A03               	xorlw	3	; case 2
   935  010F  1903               	skipnz
   936  0110  28C3               	goto	l54
   937  0111  3A01               	xorlw	1	; case 3
   938  0112  1903               	skipnz
   939  0113  28CD               	goto	l55
   940  0114  3A07               	xorlw	7	; case 4
   941  0115  1903               	skipnz
   942  0116  28D7               	goto	l56
   943  0117  3A01               	xorlw	1	; case 5
   944  0118  1903               	skipnz
   945  0119  28E1               	goto	l57
   946  011A  3A03               	xorlw	3	; case 6
   947  011B  1903               	skipnz
   948  011C  28EB               	goto	l58
   949  011D  3A01               	xorlw	1	; case 7
   950  011E  1903               	skipnz
   951  011F  28F5               	goto	l59
   952  0120  2921               	goto	l60
   953  0121                     l60:	
   954  0121  0008               	return
   955  0122                     __end_of_oscInit:	
   956                           
   957                           	psect	text3
   958  01C0                     __ptext3:	
   959 ;; *************** function _globalIntEnable *****************
   960 ;; Defined at:
   961 ;;		line 73 in file "Lab5_i2c_slave_pot_v1.c"
   962 ;; Parameters:    Size  Location     Type
   963 ;;		None
   964 ;; Auto vars:     Size  Location     Type
   965 ;;		None
   966 ;; Return value:  Size  Location     Type
   967 ;;                  1    wreg      void 
   968 ;; Registers used:
   969 ;;		None
   970 ;; Tracked objects:
   971 ;;		On entry : 0/0
   972 ;;		On exit  : 0/0
   973 ;;		Unchanged: 0/0
   974 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   975 ;;      Params:         0       0       0       0       0
   976 ;;      Locals:         0       0       0       0       0
   977 ;;      Temps:          0       0       0       0       0
   978 ;;      Totals:         0       0       0       0       0
   979 ;;Total ram usage:        0 bytes
   980 ;; Hardware stack levels used:    1
   981 ;; Hardware stack levels required when called:    1
   982 ;; This function calls:
   983 ;;		Nothing
   984 ;; This function is called by:
   985 ;;		_main
   986 ;; This function uses a non-reentrant model
   987 ;;
   988                           
   989                           
   990                           ;psect for function _globalIntEnable
   991  01C0                     _globalIntEnable:	
   992  01C0                     l751:	
   993                           ;incstack = 0
   994                           ; Regs used in _globalIntEnable: []
   995                           
   996                           
   997                           ;Lab5_i2c_slave_pot_v1.c: 74:     INTCONbits.GIE = 1;
   998  01C0  178B               	bsf	11,7	;volatile
   999                           
  1000                           ;Lab5_i2c_slave_pot_v1.c: 75:     INTCONbits.PEIE = 1;
  1001  01C1  170B               	bsf	11,6	;volatile
  1002  01C2                     l113:	
  1003  01C2  0008               	return
  1004  01C3                     __end_of_globalIntEnable:	
  1005                           
  1006                           	psect	text4
  1007  0014                     __ptext4:	
  1008 ;; *************** function _analogInSel *****************
  1009 ;; Defined at:
  1010 ;;		line 32 in file "lib_adc.c"
  1011 ;; Parameters:    Size  Location     Type
  1012 ;;  analogIn        1    wreg     unsigned char 
  1013 ;; Auto vars:     Size  Location     Type
  1014 ;;  analogIn        1    5[COMMON] unsigned char 
  1015 ;; Return value:  Size  Location     Type
  1016 ;;                  1    wreg      unsigned char 
  1017 ;; Registers used:
  1018 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1019 ;; Tracked objects:
  1020 ;;		On entry : 0/0
  1021 ;;		On exit  : 0/0
  1022 ;;		Unchanged: 0/0
  1023 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1024 ;;      Params:         0       0       0       0       0
  1025 ;;      Locals:         1       0       0       0       0
  1026 ;;      Temps:          2       0       0       0       0
  1027 ;;      Totals:         3       0       0       0       0
  1028 ;;Total ram usage:        3 bytes
  1029 ;; Hardware stack levels used:    1
  1030 ;; Hardware stack levels required when called:    1
  1031 ;; This function calls:
  1032 ;;		Nothing
  1033 ;; This function is called by:
  1034 ;;		_main
  1035 ;; This function uses a non-reentrant model
  1036 ;;
  1037                           
  1038                           
  1039                           ;psect for function _analogInSel
  1040  0014                     _analogInSel:	
  1041                           
  1042                           ;incstack = 0
  1043                           ; Regs used in _analogInSel: [wreg-fsr0h+status,2+status,0]
  1044                           ;analogInSel@analogIn stored from wreg
  1045  0014  00F5               	movwf	analogInSel@analogIn
  1046  0015                     l717:	
  1047                           
  1048                           ;lib_adc.c: 33:     switch(analogIn){
  1049  0015  2878               	goto	l721
  1050  0016                     l22:	
  1051                           ;lib_adc.c: 34:         case 0:
  1052                           
  1053                           
  1054                           ;lib_adc.c: 35:             ADCON0bits.CHS3 = 0;
  1055  0016  1283               	bcf	3,5	;RP0=0, select bank0
  1056  0017  1303               	bcf	3,6	;RP1=0, select bank0
  1057  0018  129F               	bcf	31,5	;volatile
  1058                           
  1059                           ;lib_adc.c: 36:             ADCON0bits.CHS2 = 0;
  1060  0019  121F               	bcf	31,4	;volatile
  1061                           
  1062                           ;lib_adc.c: 37:             ADCON0bits.CHS1 = 0;
  1063  001A  119F               	bcf	31,3	;volatile
  1064                           
  1065                           ;lib_adc.c: 38:             ADCON0bits.CHS0 = 0;
  1066  001B  111F               	bcf	31,2	;volatile
  1067                           
  1068                           ;lib_adc.c: 39:             break;
  1069  001C  28AC               	goto	l37
  1070  001D                     l24:	
  1071                           ;lib_adc.c: 40:         case 1:
  1072                           
  1073                           
  1074                           ;lib_adc.c: 41:             ADCON0bits.CHS3 = 0;
  1075  001D  1283               	bcf	3,5	;RP0=0, select bank0
  1076  001E  1303               	bcf	3,6	;RP1=0, select bank0
  1077  001F  129F               	bcf	31,5	;volatile
  1078                           
  1079                           ;lib_adc.c: 42:             ADCON0bits.CHS2 = 0;
  1080  0020  121F               	bcf	31,4	;volatile
  1081                           
  1082                           ;lib_adc.c: 43:             ADCON0bits.CHS1 = 0;
  1083  0021  119F               	bcf	31,3	;volatile
  1084                           
  1085                           ;lib_adc.c: 44:             ADCON0bits.CHS0 = 1;
  1086  0022  151F               	bsf	31,2	;volatile
  1087                           
  1088                           ;lib_adc.c: 45:             break;
  1089  0023  28AC               	goto	l37
  1090  0024                     l25:	
  1091                           ;lib_adc.c: 46:         case 2:
  1092                           
  1093                           
  1094                           ;lib_adc.c: 47:             ADCON0bits.CHS3 = 0;
  1095  0024  1283               	bcf	3,5	;RP0=0, select bank0
  1096  0025  1303               	bcf	3,6	;RP1=0, select bank0
  1097  0026  129F               	bcf	31,5	;volatile
  1098                           
  1099                           ;lib_adc.c: 48:             ADCON0bits.CHS2 = 0;
  1100  0027  121F               	bcf	31,4	;volatile
  1101                           
  1102                           ;lib_adc.c: 49:             ADCON0bits.CHS1 = 1;
  1103  0028  159F               	bsf	31,3	;volatile
  1104                           
  1105                           ;lib_adc.c: 50:             ADCON0bits.CHS0 = 0;
  1106  0029  111F               	bcf	31,2	;volatile
  1107                           
  1108                           ;lib_adc.c: 51:             break;
  1109  002A  28AC               	goto	l37
  1110  002B                     l26:	
  1111                           ;lib_adc.c: 52:         case 3:
  1112                           
  1113                           
  1114                           ;lib_adc.c: 53:             ADCON0bits.CHS3 = 0;
  1115  002B  1283               	bcf	3,5	;RP0=0, select bank0
  1116  002C  1303               	bcf	3,6	;RP1=0, select bank0
  1117  002D  129F               	bcf	31,5	;volatile
  1118                           
  1119                           ;lib_adc.c: 54:             ADCON0bits.CHS2 = 0;
  1120  002E  121F               	bcf	31,4	;volatile
  1121                           
  1122                           ;lib_adc.c: 55:             ADCON0bits.CHS1 = 1;
  1123  002F  159F               	bsf	31,3	;volatile
  1124                           
  1125                           ;lib_adc.c: 56:             ADCON0bits.CHS0 = 1;
  1126  0030  151F               	bsf	31,2	;volatile
  1127                           
  1128                           ;lib_adc.c: 57:             break;
  1129  0031  28AC               	goto	l37
  1130  0032                     l27:	
  1131                           ;lib_adc.c: 58:         case 4:
  1132                           
  1133                           
  1134                           ;lib_adc.c: 59:             ADCON0bits.CHS3 = 0;
  1135  0032  1283               	bcf	3,5	;RP0=0, select bank0
  1136  0033  1303               	bcf	3,6	;RP1=0, select bank0
  1137  0034  129F               	bcf	31,5	;volatile
  1138                           
  1139                           ;lib_adc.c: 60:             ADCON0bits.CHS2 = 1;
  1140  0035  161F               	bsf	31,4	;volatile
  1141                           
  1142                           ;lib_adc.c: 61:             ADCON0bits.CHS1 = 0;
  1143  0036  119F               	bcf	31,3	;volatile
  1144                           
  1145                           ;lib_adc.c: 62:             ADCON0bits.CHS0 = 0;
  1146  0037  111F               	bcf	31,2	;volatile
  1147                           
  1148                           ;lib_adc.c: 63:             break;
  1149  0038  28AC               	goto	l37
  1150  0039                     l28:	
  1151                           ;lib_adc.c: 64:         case 5:
  1152                           
  1153                           
  1154                           ;lib_adc.c: 65:             ADCON0bits.CHS3 = 0;
  1155  0039  1283               	bcf	3,5	;RP0=0, select bank0
  1156  003A  1303               	bcf	3,6	;RP1=0, select bank0
  1157  003B  129F               	bcf	31,5	;volatile
  1158                           
  1159                           ;lib_adc.c: 66:             ADCON0bits.CHS2 = 1;
  1160  003C  161F               	bsf	31,4	;volatile
  1161                           
  1162                           ;lib_adc.c: 67:             ADCON0bits.CHS1 = 0;
  1163  003D  119F               	bcf	31,3	;volatile
  1164                           
  1165                           ;lib_adc.c: 68:             ADCON0bits.CHS0 = 1;
  1166  003E  151F               	bsf	31,2	;volatile
  1167                           
  1168                           ;lib_adc.c: 69:             break;
  1169  003F  28AC               	goto	l37
  1170  0040                     l29:	
  1171                           ;lib_adc.c: 70:         case 6:
  1172                           
  1173                           
  1174                           ;lib_adc.c: 71:             ADCON0bits.CHS3 = 0;
  1175  0040  1283               	bcf	3,5	;RP0=0, select bank0
  1176  0041  1303               	bcf	3,6	;RP1=0, select bank0
  1177  0042  129F               	bcf	31,5	;volatile
  1178                           
  1179                           ;lib_adc.c: 72:             ADCON0bits.CHS2 = 1;
  1180  0043  161F               	bsf	31,4	;volatile
  1181                           
  1182                           ;lib_adc.c: 73:             ADCON0bits.CHS1 = 1;
  1183  0044  159F               	bsf	31,3	;volatile
  1184                           
  1185                           ;lib_adc.c: 74:             ADCON0bits.CHS0 = 0;
  1186  0045  111F               	bcf	31,2	;volatile
  1187                           
  1188                           ;lib_adc.c: 75:             break;
  1189  0046  28AC               	goto	l37
  1190  0047                     l30:	
  1191                           ;lib_adc.c: 76:         case 7:
  1192                           
  1193                           
  1194                           ;lib_adc.c: 77:             ADCON0bits.CHS3 = 0;
  1195  0047  1283               	bcf	3,5	;RP0=0, select bank0
  1196  0048  1303               	bcf	3,6	;RP1=0, select bank0
  1197  0049  129F               	bcf	31,5	;volatile
  1198                           
  1199                           ;lib_adc.c: 78:             ADCON0bits.CHS2 = 1;
  1200  004A  161F               	bsf	31,4	;volatile
  1201                           
  1202                           ;lib_adc.c: 79:             ADCON0bits.CHS1 = 1;
  1203  004B  159F               	bsf	31,3	;volatile
  1204                           
  1205                           ;lib_adc.c: 80:             ADCON0bits.CHS0 = 1;
  1206  004C  151F               	bsf	31,2	;volatile
  1207                           
  1208                           ;lib_adc.c: 81:             break;
  1209  004D  28AC               	goto	l37
  1210  004E                     l31:	
  1211                           ;lib_adc.c: 82:         case 8:
  1212                           
  1213                           
  1214                           ;lib_adc.c: 83:             ADCON0bits.CHS3 = 1;
  1215  004E  1283               	bcf	3,5	;RP0=0, select bank0
  1216  004F  1303               	bcf	3,6	;RP1=0, select bank0
  1217  0050  169F               	bsf	31,5	;volatile
  1218                           
  1219                           ;lib_adc.c: 84:             ADCON0bits.CHS2 = 0;
  1220  0051  121F               	bcf	31,4	;volatile
  1221                           
  1222                           ;lib_adc.c: 85:             ADCON0bits.CHS1 = 0;
  1223  0052  119F               	bcf	31,3	;volatile
  1224                           
  1225                           ;lib_adc.c: 86:             ADCON0bits.CHS0 = 0;
  1226  0053  111F               	bcf	31,2	;volatile
  1227                           
  1228                           ;lib_adc.c: 87:             break;
  1229  0054  28AC               	goto	l37
  1230  0055                     l32:	
  1231                           ;lib_adc.c: 88:         case 9:
  1232                           
  1233                           
  1234                           ;lib_adc.c: 89:             ADCON0bits.CHS3 = 1;
  1235  0055  1283               	bcf	3,5	;RP0=0, select bank0
  1236  0056  1303               	bcf	3,6	;RP1=0, select bank0
  1237  0057  169F               	bsf	31,5	;volatile
  1238                           
  1239                           ;lib_adc.c: 90:             ADCON0bits.CHS2 = 0;
  1240  0058  121F               	bcf	31,4	;volatile
  1241                           
  1242                           ;lib_adc.c: 91:             ADCON0bits.CHS1 = 0;
  1243  0059  119F               	bcf	31,3	;volatile
  1244                           
  1245                           ;lib_adc.c: 92:             ADCON0bits.CHS0 = 1;
  1246  005A  151F               	bsf	31,2	;volatile
  1247                           
  1248                           ;lib_adc.c: 93:             break;
  1249  005B  28AC               	goto	l37
  1250  005C                     l33:	
  1251                           ;lib_adc.c: 94:         case 10:
  1252                           
  1253                           
  1254                           ;lib_adc.c: 95:             ADCON0bits.CHS3 = 1;
  1255  005C  1283               	bcf	3,5	;RP0=0, select bank0
  1256  005D  1303               	bcf	3,6	;RP1=0, select bank0
  1257  005E  169F               	bsf	31,5	;volatile
  1258                           
  1259                           ;lib_adc.c: 96:             ADCON0bits.CHS2 = 0;
  1260  005F  121F               	bcf	31,4	;volatile
  1261                           
  1262                           ;lib_adc.c: 97:             ADCON0bits.CHS1 = 1;
  1263  0060  159F               	bsf	31,3	;volatile
  1264                           
  1265                           ;lib_adc.c: 98:             ADCON0bits.CHS0 = 0;
  1266  0061  111F               	bcf	31,2	;volatile
  1267                           
  1268                           ;lib_adc.c: 99:             break;
  1269  0062  28AC               	goto	l37
  1270  0063                     l34:	
  1271                           ;lib_adc.c: 100:         case 11:
  1272                           
  1273                           
  1274                           ;lib_adc.c: 101:             ADCON0bits.CHS3 = 1;
  1275  0063  1283               	bcf	3,5	;RP0=0, select bank0
  1276  0064  1303               	bcf	3,6	;RP1=0, select bank0
  1277  0065  169F               	bsf	31,5	;volatile
  1278                           
  1279                           ;lib_adc.c: 102:             ADCON0bits.CHS2 = 0;
  1280  0066  121F               	bcf	31,4	;volatile
  1281                           
  1282                           ;lib_adc.c: 103:             ADCON0bits.CHS1 = 1;
  1283  0067  159F               	bsf	31,3	;volatile
  1284                           
  1285                           ;lib_adc.c: 104:             ADCON0bits.CHS0 = 1;
  1286  0068  151F               	bsf	31,2	;volatile
  1287                           
  1288                           ;lib_adc.c: 105:             break;
  1289  0069  28AC               	goto	l37
  1290  006A                     l35:	
  1291                           ;lib_adc.c: 106:         case 12:
  1292                           
  1293                           
  1294                           ;lib_adc.c: 107:             ADCON0bits.CHS3 = 1;
  1295  006A  1283               	bcf	3,5	;RP0=0, select bank0
  1296  006B  1303               	bcf	3,6	;RP1=0, select bank0
  1297  006C  169F               	bsf	31,5	;volatile
  1298                           
  1299                           ;lib_adc.c: 108:             ADCON0bits.CHS2 = 1;
  1300  006D  161F               	bsf	31,4	;volatile
  1301                           
  1302                           ;lib_adc.c: 109:             ADCON0bits.CHS1 = 0;
  1303  006E  119F               	bcf	31,3	;volatile
  1304                           
  1305                           ;lib_adc.c: 110:             ADCON0bits.CHS0 = 0;
  1306  006F  111F               	bcf	31,2	;volatile
  1307                           
  1308                           ;lib_adc.c: 111:             break;
  1309  0070  28AC               	goto	l37
  1310  0071                     l36:	
  1311                           ;lib_adc.c: 112:         case 13:
  1312                           
  1313                           
  1314                           ;lib_adc.c: 113:             ADCON0bits.CHS3 = 1;
  1315  0071  1283               	bcf	3,5	;RP0=0, select bank0
  1316  0072  1303               	bcf	3,6	;RP1=0, select bank0
  1317  0073  169F               	bsf	31,5	;volatile
  1318                           
  1319                           ;lib_adc.c: 114:             ADCON0bits.CHS2 = 1;
  1320  0074  161F               	bsf	31,4	;volatile
  1321                           
  1322                           ;lib_adc.c: 115:             ADCON0bits.CHS1 = 0;
  1323  0075  119F               	bcf	31,3	;volatile
  1324                           
  1325                           ;lib_adc.c: 116:             ADCON0bits.CHS0 = 1;
  1326  0076  151F               	bsf	31,2	;volatile
  1327                           
  1328                           ;lib_adc.c: 117:             break;
  1329  0077  28AC               	goto	l37
  1330  0078                     l721:	
  1331  0078  0875               	movf	analogInSel@analogIn,w
  1332  0079  00F3               	movwf	??_analogInSel
  1333  007A  01F4               	clrf	??_analogInSel+1
  1334                           
  1335                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1336                           ; Switch size 1, requested type "simple"
  1337                           ; Number of cases is 1, Range of values is 0 to 0
  1338                           ; switch strategies available:
  1339                           ; Name         Instructions Cycles
  1340                           ; simple_byte            4     3 (average)
  1341                           ; direct_byte           11     8 (fixed)
  1342                           ; jumptable            260     6 (fixed)
  1343                           ;	Chosen strategy is simple_byte
  1344  007B  0874               	movf	??_analogInSel+1,w
  1345  007C  3A00               	xorlw	0	; case 0
  1346  007D  1903               	skipnz
  1347  007E  2880               	goto	l853
  1348  007F  28AC               	goto	l37
  1349  0080                     l853:	
  1350                           
  1351                           ; Switch size 1, requested type "simple"
  1352                           ; Number of cases is 14, Range of values is 0 to 13
  1353                           ; switch strategies available:
  1354                           ; Name         Instructions Cycles
  1355                           ; simple_byte           43    22 (average)
  1356                           ; direct_byte           50     8 (fixed)
  1357                           ; jumptable            260     6 (fixed)
  1358                           ;	Chosen strategy is simple_byte
  1359  0080  0873               	movf	??_analogInSel,w
  1360  0081  3A00               	xorlw	0	; case 0
  1361  0082  1903               	skipnz
  1362  0083  2816               	goto	l22
  1363  0084  3A01               	xorlw	1	; case 1
  1364  0085  1903               	skipnz
  1365  0086  281D               	goto	l24
  1366  0087  3A03               	xorlw	3	; case 2
  1367  0088  1903               	skipnz
  1368  0089  2824               	goto	l25
  1369  008A  3A01               	xorlw	1	; case 3
  1370  008B  1903               	skipnz
  1371  008C  282B               	goto	l26
  1372  008D  3A07               	xorlw	7	; case 4
  1373  008E  1903               	skipnz
  1374  008F  2832               	goto	l27
  1375  0090  3A01               	xorlw	1	; case 5
  1376  0091  1903               	skipnz
  1377  0092  2839               	goto	l28
  1378  0093  3A03               	xorlw	3	; case 6
  1379  0094  1903               	skipnz
  1380  0095  2840               	goto	l29
  1381  0096  3A01               	xorlw	1	; case 7
  1382  0097  1903               	skipnz
  1383  0098  2847               	goto	l30
  1384  0099  3A0F               	xorlw	15	; case 8
  1385  009A  1903               	skipnz
  1386  009B  284E               	goto	l31
  1387  009C  3A01               	xorlw	1	; case 9
  1388  009D  1903               	skipnz
  1389  009E  2855               	goto	l32
  1390  009F  3A03               	xorlw	3	; case 10
  1391  00A0  1903               	skipnz
  1392  00A1  285C               	goto	l33
  1393  00A2  3A01               	xorlw	1	; case 11
  1394  00A3  1903               	skipnz
  1395  00A4  2863               	goto	l34
  1396  00A5  3A07               	xorlw	7	; case 12
  1397  00A6  1903               	skipnz
  1398  00A7  286A               	goto	l35
  1399  00A8  3A01               	xorlw	1	; case 13
  1400  00A9  1903               	skipnz
  1401  00AA  2871               	goto	l36
  1402  00AB  28AC               	goto	l37
  1403  00AC                     l37:	
  1404  00AC  0008               	return
  1405  00AD                     __end_of_analogInSel:	
  1406                           
  1407                           	psect	text5
  1408  01B7                     __ptext5:	
  1409 ;; *************** function _adcSetup *****************
  1410 ;; Defined at:
  1411 ;;		line 12 in file "lib_adc.c"
  1412 ;; Parameters:    Size  Location     Type
  1413 ;;		None
  1414 ;; Auto vars:     Size  Location     Type
  1415 ;;		None
  1416 ;; Return value:  Size  Location     Type
  1417 ;;                  1    wreg      void 
  1418 ;; Registers used:
  1419 ;;		None
  1420 ;; Tracked objects:
  1421 ;;		On entry : 0/0
  1422 ;;		On exit  : 0/0
  1423 ;;		Unchanged: 0/0
  1424 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1425 ;;      Params:         0       0       0       0       0
  1426 ;;      Locals:         0       0       0       0       0
  1427 ;;      Temps:          0       0       0       0       0
  1428 ;;      Totals:         0       0       0       0       0
  1429 ;;Total ram usage:        0 bytes
  1430 ;; Hardware stack levels used:    1
  1431 ;; Hardware stack levels required when called:    1
  1432 ;; This function calls:
  1433 ;;		Nothing
  1434 ;; This function is called by:
  1435 ;;		_main
  1436 ;; This function uses a non-reentrant model
  1437 ;;
  1438                           
  1439                           
  1440                           ;psect for function _adcSetup
  1441  01B7                     _adcSetup:	
  1442  01B7                     l705:	
  1443                           ;incstack = 0
  1444                           ; Regs used in _adcSetup: []
  1445                           
  1446                           
  1447                           ;lib_adc.c: 13:     ADCON0bits.ADON = 1;
  1448  01B7  1283               	bcf	3,5	;RP0=0, select bank0
  1449  01B8  1303               	bcf	3,6	;RP1=0, select bank0
  1450  01B9  141F               	bsf	31,0	;volatile
  1451                           
  1452                           ;lib_adc.c: 14:     ADCON1bits.ADFM = 0;
  1453  01BA  1683               	bsf	3,5	;RP0=1, select bank1
  1454  01BB  1303               	bcf	3,6	;RP1=0, select bank1
  1455  01BC  139F               	bcf	31,7	;volatile
  1456                           
  1457                           ;lib_adc.c: 15:     ADCON1bits.VCFG1 = 0;
  1458  01BD  129F               	bcf	31,5	;volatile
  1459                           
  1460                           ;lib_adc.c: 16:     ADCON1bits.VCFG0 = 0;
  1461  01BE  121F               	bcf	31,4	;volatile
  1462  01BF                     l11:	
  1463  01BF  0008               	return
  1464  01C0                     __end_of_adcSetup:	
  1465                           
  1466                           	psect	text6
  1467  0179                     __ptext6:	
  1468 ;; *************** function _adcInterrupt *****************
  1469 ;; Defined at:
  1470 ;;		line 19 in file "lib_adc.c"
  1471 ;; Parameters:    Size  Location     Type
  1472 ;;  en              1    wreg     unsigned char 
  1473 ;; Auto vars:     Size  Location     Type
  1474 ;;  en              1    5[COMMON] unsigned char 
  1475 ;; Return value:  Size  Location     Type
  1476 ;;                  1    wreg      void 
  1477 ;; Registers used:
  1478 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1479 ;; Tracked objects:
  1480 ;;		On entry : 0/0
  1481 ;;		On exit  : 0/0
  1482 ;;		Unchanged: 0/0
  1483 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1484 ;;      Params:         0       0       0       0       0
  1485 ;;      Locals:         1       0       0       0       0
  1486 ;;      Temps:          2       0       0       0       0
  1487 ;;      Totals:         3       0       0       0       0
  1488 ;;Total ram usage:        3 bytes
  1489 ;; Hardware stack levels used:    1
  1490 ;; Hardware stack levels required when called:    1
  1491 ;; This function calls:
  1492 ;;		Nothing
  1493 ;; This function is called by:
  1494 ;;		_main
  1495 ;; This function uses a non-reentrant model
  1496 ;;
  1497                           
  1498                           
  1499                           ;psect for function _adcInterrupt
  1500  0179                     _adcInterrupt:	
  1501                           
  1502                           ;incstack = 0
  1503                           ; Regs used in _adcInterrupt: [wreg-fsr0h+status,2+status,0]
  1504                           ;adcInterrupt@en stored from wreg
  1505  0179  00F5               	movwf	adcInterrupt@en
  1506  017A                     l707:	
  1507                           
  1508                           ;lib_adc.c: 20:     switch(en){
  1509  017A  2989               	goto	l711
  1510  017B                     l15:	
  1511                           ;lib_adc.c: 21:         case 0:
  1512                           
  1513                           
  1514                           ;lib_adc.c: 22:             PIE1bits.ADIE = 0;
  1515  017B  1683               	bsf	3,5	;RP0=1, select bank1
  1516  017C  1303               	bcf	3,6	;RP1=0, select bank1
  1517  017D  130C               	bcf	12,6	;volatile
  1518                           
  1519                           ;lib_adc.c: 23:             PIR1bits.ADIF = 0;
  1520  017E  1283               	bcf	3,5	;RP0=0, select bank0
  1521  017F  1303               	bcf	3,6	;RP1=0, select bank0
  1522  0180  130C               	bcf	12,6	;volatile
  1523                           
  1524                           ;lib_adc.c: 24:             break;
  1525  0181  2999               	goto	l18
  1526  0182                     l17:	
  1527                           ;lib_adc.c: 25:         case 1:
  1528                           
  1529                           
  1530                           ;lib_adc.c: 26:             PIE1bits.ADIE = 1;
  1531  0182  1683               	bsf	3,5	;RP0=1, select bank1
  1532  0183  1303               	bcf	3,6	;RP1=0, select bank1
  1533  0184  170C               	bsf	12,6	;volatile
  1534                           
  1535                           ;lib_adc.c: 27:             PIR1bits.ADIF = 0;
  1536  0185  1283               	bcf	3,5	;RP0=0, select bank0
  1537  0186  1303               	bcf	3,6	;RP1=0, select bank0
  1538  0187  130C               	bcf	12,6	;volatile
  1539                           
  1540                           ;lib_adc.c: 28:             break;
  1541  0188  2999               	goto	l18
  1542  0189                     l711:	
  1543  0189  0875               	movf	adcInterrupt@en,w
  1544  018A  00F3               	movwf	??_adcInterrupt
  1545  018B  01F4               	clrf	??_adcInterrupt+1
  1546                           
  1547                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1548                           ; Switch size 1, requested type "simple"
  1549                           ; Number of cases is 1, Range of values is 0 to 0
  1550                           ; switch strategies available:
  1551                           ; Name         Instructions Cycles
  1552                           ; simple_byte            4     3 (average)
  1553                           ; direct_byte           11     8 (fixed)
  1554                           ; jumptable            260     6 (fixed)
  1555                           ;	Chosen strategy is simple_byte
  1556  018C  0874               	movf	??_adcInterrupt+1,w
  1557  018D  3A00               	xorlw	0	; case 0
  1558  018E  1903               	skipnz
  1559  018F  2991               	goto	l855
  1560  0190  2999               	goto	l18
  1561  0191                     l855:	
  1562                           
  1563                           ; Switch size 1, requested type "simple"
  1564                           ; Number of cases is 2, Range of values is 0 to 1
  1565                           ; switch strategies available:
  1566                           ; Name         Instructions Cycles
  1567                           ; simple_byte            7     4 (average)
  1568                           ; direct_byte           14     8 (fixed)
  1569                           ; jumptable            260     6 (fixed)
  1570                           ;	Chosen strategy is simple_byte
  1571  0191  0873               	movf	??_adcInterrupt,w
  1572  0192  3A00               	xorlw	0	; case 0
  1573  0193  1903               	skipnz
  1574  0194  297B               	goto	l15
  1575  0195  3A01               	xorlw	1	; case 1
  1576  0196  1903               	skipnz
  1577  0197  2982               	goto	l17
  1578  0198  2999               	goto	l18
  1579  0199                     l18:	
  1580  0199  0008               	return
  1581  019A                     __end_of_adcInterrupt:	
  1582                           
  1583                           	psect	text7
  1584  0154                     __ptext7:	
  1585 ;; *************** function _adcFoscSel *****************
  1586 ;; Defined at:
  1587 ;;		line 122 in file "lib_adc.c"
  1588 ;; Parameters:    Size  Location     Type
  1589 ;;  fosc            1    wreg     unsigned char 
  1590 ;; Auto vars:     Size  Location     Type
  1591 ;;  fosc            1    5[COMMON] unsigned char 
  1592 ;; Return value:  Size  Location     Type
  1593 ;;                  1    wreg      unsigned char 
  1594 ;; Registers used:
  1595 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1596 ;; Tracked objects:
  1597 ;;		On entry : 0/0
  1598 ;;		On exit  : 0/0
  1599 ;;		Unchanged: 0/0
  1600 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1601 ;;      Params:         0       0       0       0       0
  1602 ;;      Locals:         1       0       0       0       0
  1603 ;;      Temps:          2       0       0       0       0
  1604 ;;      Totals:         3       0       0       0       0
  1605 ;;Total ram usage:        3 bytes
  1606 ;; Hardware stack levels used:    1
  1607 ;; Hardware stack levels required when called:    1
  1608 ;; This function calls:
  1609 ;;		Nothing
  1610 ;; This function is called by:
  1611 ;;		_main
  1612 ;; This function uses a non-reentrant model
  1613 ;;
  1614                           
  1615                           
  1616                           ;psect for function _adcFoscSel
  1617  0154                     _adcFoscSel:	
  1618                           
  1619                           ;incstack = 0
  1620                           ; Regs used in _adcFoscSel: [wreg-fsr0h+status,2+status,0]
  1621                           ;adcFoscSel@fosc stored from wreg
  1622  0154  00F5               	movwf	adcFoscSel@fosc
  1623  0155                     l727:	
  1624                           
  1625                           ;lib_adc.c: 123:     switch(fosc){
  1626  0155  2965               	goto	l731
  1627  0156                     l41:	
  1628                           ;lib_adc.c: 124:         case 0:
  1629                           
  1630                           
  1631                           ;lib_adc.c: 125:             ADCON0bits.ADCS1 = 0;
  1632  0156  1283               	bcf	3,5	;RP0=0, select bank0
  1633  0157  1303               	bcf	3,6	;RP1=0, select bank0
  1634  0158  139F               	bcf	31,7	;volatile
  1635                           
  1636                           ;lib_adc.c: 126:             ADCON0bits.ADCS0 = 0;
  1637  0159  131F               	bcf	31,6	;volatile
  1638                           
  1639                           ;lib_adc.c: 127:             break;
  1640  015A  2978               	goto	l45
  1641  015B                     l43:	
  1642                           ;lib_adc.c: 128:         case 1:
  1643                           
  1644                           
  1645                           ;lib_adc.c: 129:             ADCON0bits.ADCS1 = 0;
  1646  015B  1283               	bcf	3,5	;RP0=0, select bank0
  1647  015C  1303               	bcf	3,6	;RP1=0, select bank0
  1648  015D  139F               	bcf	31,7	;volatile
  1649                           
  1650                           ;lib_adc.c: 130:             ADCON0bits.ADCS0 = 1;
  1651  015E  171F               	bsf	31,6	;volatile
  1652                           
  1653                           ;lib_adc.c: 131:             break;
  1654  015F  2978               	goto	l45
  1655  0160                     l44:	
  1656                           ;lib_adc.c: 132:         case 3:
  1657                           
  1658                           
  1659                           ;lib_adc.c: 133:             ADCON0bits.ADCS1 = 1;
  1660  0160  1283               	bcf	3,5	;RP0=0, select bank0
  1661  0161  1303               	bcf	3,6	;RP1=0, select bank0
  1662  0162  179F               	bsf	31,7	;volatile
  1663                           
  1664                           ;lib_adc.c: 134:             ADCON0bits.ADCS0 = 0;
  1665  0163  131F               	bcf	31,6	;volatile
  1666                           
  1667                           ;lib_adc.c: 135:             break;
  1668  0164  2978               	goto	l45
  1669  0165                     l731:	
  1670  0165  0875               	movf	adcFoscSel@fosc,w
  1671  0166  00F3               	movwf	??_adcFoscSel
  1672  0167  01F4               	clrf	??_adcFoscSel+1
  1673                           
  1674                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1675                           ; Switch size 1, requested type "simple"
  1676                           ; Number of cases is 1, Range of values is 0 to 0
  1677                           ; switch strategies available:
  1678                           ; Name         Instructions Cycles
  1679                           ; simple_byte            4     3 (average)
  1680                           ; direct_byte           11     8 (fixed)
  1681                           ; jumptable            260     6 (fixed)
  1682                           ;	Chosen strategy is simple_byte
  1683  0168  0874               	movf	??_adcFoscSel+1,w
  1684  0169  3A00               	xorlw	0	; case 0
  1685  016A  1903               	skipnz
  1686  016B  296D               	goto	l857
  1687  016C  2978               	goto	l45
  1688  016D                     l857:	
  1689                           
  1690                           ; Switch size 1, requested type "simple"
  1691                           ; Number of cases is 3, Range of values is 0 to 3
  1692                           ; switch strategies available:
  1693                           ; Name         Instructions Cycles
  1694                           ; simple_byte           10     6 (average)
  1695                           ; direct_byte           20     8 (fixed)
  1696                           ; jumptable            260     6 (fixed)
  1697                           ;	Chosen strategy is simple_byte
  1698  016D  0873               	movf	??_adcFoscSel,w
  1699  016E  3A00               	xorlw	0	; case 0
  1700  016F  1903               	skipnz
  1701  0170  2956               	goto	l41
  1702  0171  3A01               	xorlw	1	; case 1
  1703  0172  1903               	skipnz
  1704  0173  295B               	goto	l43
  1705  0174  3A02               	xorlw	2	; case 3
  1706  0175  1903               	skipnz
  1707  0176  2960               	goto	l44
  1708  0177  2978               	goto	l45
  1709  0178                     l45:	
  1710  0178  0008               	return
  1711  0179                     __end_of_adcFoscSel:	
  1712                           
  1713                           	psect	text8
  1714  019A                     __ptext8:	
  1715 ;; *************** function _isr *****************
  1716 ;; Defined at:
  1717 ;;		line 44 in file "Lab5_i2c_slave_pot_v1.c"
  1718 ;; Parameters:    Size  Location     Type
  1719 ;;		None
  1720 ;; Auto vars:     Size  Location     Type
  1721 ;;		None
  1722 ;; Return value:  Size  Location     Type
  1723 ;;                  1    wreg      void 
  1724 ;; Registers used:
  1725 ;;		wreg
  1726 ;; Tracked objects:
  1727 ;;		On entry : 0/0
  1728 ;;		On exit  : 0/0
  1729 ;;		Unchanged: 0/0
  1730 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1731 ;;      Params:         0       0       0       0       0
  1732 ;;      Locals:         0       0       0       0       0
  1733 ;;      Temps:          3       0       0       0       0
  1734 ;;      Totals:         3       0       0       0       0
  1735 ;;Total ram usage:        3 bytes
  1736 ;; Hardware stack levels used:    1
  1737 ;; This function calls:
  1738 ;;		Nothing
  1739 ;; This function is called by:
  1740 ;;		Interrupt level 1
  1741 ;; This function uses a non-reentrant model
  1742 ;;
  1743                           
  1744                           
  1745                           ;psect for function _isr
  1746  019A                     _isr:	
  1747  019A                     i1l753:	
  1748                           
  1749                           ;Lab5_i2c_slave_pot_v1.c: 45:     if (PIR1bits.ADIF == 1){
  1750  019A  1283               	bcf	3,5	;RP0=0, select bank0
  1751  019B  1303               	bcf	3,6	;RP1=0, select bank0
  1752  019C  1F0C               	btfss	12,6	;volatile
  1753  019D  299F               	goto	u1_21
  1754  019E  29A0               	goto	u1_20
  1755  019F                     u1_21:	
  1756  019F  29A6               	goto	i1l98
  1757  01A0                     u1_20:	
  1758  01A0                     i1l755:	
  1759                           
  1760                           ;Lab5_i2c_slave_pot_v1.c: 46:         pot = ADRESH;
  1761  01A0  081E               	movf	30,w	;volatile
  1762  01A1  00F0               	movwf	??_isr
  1763  01A2  0870               	movf	??_isr,w
  1764  01A3  00F6               	movwf	_pot
  1765                           
  1766                           ;Lab5_i2c_slave_pot_v1.c: 47:         PORTB = pot;
  1767  01A4  0876               	movf	_pot,w
  1768  01A5  0086               	movwf	6	;volatile
  1769  01A6                     i1l98:	
  1770  01A6  0872               	movf	??_isr+2,w
  1771  01A7  008A               	movwf	10
  1772  01A8  0E71               	swapf	(??_isr+1)^(0+4294967168),w
  1773  01A9  0083               	movwf	3
  1774  01AA  0EFE               	swapf	btemp,f
  1775  01AB  0E7E               	swapf	btemp,w
  1776  01AC  0009               	retfie
  1777  01AD                     __end_of_isr:	
  1778  007E                     btemp	set	126	;btemp
  1779  007E                     wtemp0	set	126
  1780                           
  1781                           	psect	intentry
  1782  0004                     __pintentry:	
  1783                           ;incstack = 0
  1784                           ; Regs used in _isr: [wreg]
  1785                           
  1786  0004                     interrupt_function:	
  1787  007E                     saved_w	set	btemp
  1788  0004  00FE               	movwf	btemp
  1789  0005  0E03               	swapf	3,w
  1790  0006  00F1               	movwf	??_isr+1
  1791  0007  080A               	movf	10,w
  1792  0008  00F2               	movwf	??_isr+2
  1793  0009  120A  118A  299A   	ljmp	_isr


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       7
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_adcFoscSel
    _main->_adcInterrupt
    _main->_analogInSel
    _main->_oscInit

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      75
                         _adcFoscSel
                       _adcInterrupt
                           _adcSetup
                        _analogInSel
                    _globalIntEnable
                            _oscInit
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _oscInit                                              3     3      0      20
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _globalIntEnable                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _analogInSel                                          3     3      0      20
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _adcSetup                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _adcInterrupt                                         3     3      0      15
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _adcFoscSel                                           3     3      0      20
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _adcFoscSel
   _adcInterrupt
   _adcSetup
   _analogInSel
   _globalIntEnable
   _oscInit
   _setup

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       7       1       50.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       7       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       7      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Tue Feb 25 14:50:47 2020

             __CFG_CP$OFF 0000                        l11 01BF                        l30 0047  
                      l22 0016                        l15 017B                        l31 004E  
                      l32 0055                        l24 001D                        l41 0156  
                      l17 0182                        l33 005C                        l25 0024  
                      l18 0199                        l34 0063                        l26 002B  
                      l43 015B                        l35 006A                        l27 0032  
                      l51 00AF                        l44 0160                        l36 0071  
                      l28 0039                        l60 0121                        l45 0178  
                      l29 0040                        l37 00AC                        l53 00B9  
                      l54 00C3                        l55 00CD                        l56 00D7  
                      l57 00E1                        l58 00EB                        l59 00F5  
                      u20 014F                        u21 014E                       l110 01B6  
                     l113 01C2                       l711 0189                       l705 01B7  
                     l721 0078                       l731 0165                       l707 017A  
                     l717 0015                       l741 00FF                       l727 0155  
                     l751 01C0                       l737 00AE                       l761 012D  
                     l851 0107                       l747 01AD                       l763 013E  
                     l853 0080                       l749 01B3                       l765 0143  
                     l757 0122                       l855 0191                       l767 0149  
                     l759 0127                       l857 016D                       l769 014F  
            __CFG_CPD$OFF 0000              _adcInterrupt 0179                       _isr 019A  
                     _pot 0076       analogInSel@analogIn 0075              __CFG_LVP$OFF 0000  
                    ?_isr 0070                      i1l98 01A6                      u1_20 01A0  
                    u1_21 019F              __CFG_WRT$OFF 0000                      _main 0122  
                    btemp 007E                      start 000C             __CFG_IESO$OFF 0000  
                   ??_isr 0070                     ?_main 0070             __CFG_WDTE$OFF 0000  
                   i1l753 019A                     i1l755 01A0                     _PORTB 0006  
                   _TRISA 0085            __CFG_FCMEN$OFF 0000                     _setup 01AD  
         __end_of_oscInit 0122            __CFG_BOREN$OFF 0000                     pclath 000A  
                   status 0003                     wtemp0 007E      __size_of_analogInSel 0099  
         _globalIntEnable 01C0            __CFG_MCLRE$OFF 0000           __initialization 000F  
            __end_of_main 0154                    ??_main 0076                    _ADRESH 001E  
                  ?_setup 0070          __end_of_adcSetup 01C0            __CFG_PWRTE$OFF 0000  
               ??_oscInit 0073                    saved_w 007E   __end_of_globalIntEnable 01C3  
              _adcFoscSel 0154   __end_of__initialization 0010            __pcstackCOMMON 0070  
           __end_of_setup 01B7               oscInit@freq 0075                   ??_setup 0073  
              __pmaintext 0122                __pintentry 0004                 ?_adcSetup 0070  
        ?_globalIntEnable 0070               ?_adcFoscSel 0070                ??_adcSetup 0073  
               _ANSELbits 0188                   __ptext1 01AD                   __ptext2 00AD  
                 __ptext3 01C0                   __ptext4 0014                   __ptext5 01B7  
                 __ptext6 0179                   __ptext7 0154                   __ptext8 019A  
            __size_of_isr 0013                   _oscInit 00AD             ??_analogInSel 0073  
    end_of_initialization 0010       __size_of_adcFoscSel 0025                 _TRISEbits 0089  
     __end_of_analogInSel 00AD            adcFoscSel@fosc 0075             ?_adcInterrupt 0070  
     start_initialization 000F               __end_of_isr 01AD  __CFG_FOSC$INTRC_NOCLKOUT 0000  
          ??_adcInterrupt 0073         __size_of_adcSetup 0009               __pbssCOMMON 0076  
               ___latbits 0002               _analogInSel 0014              ??_adcFoscSel 0073  
      __end_of_adcFoscSel 0179                  ?_oscInit 0070            __size_of_setup 000A  
       interrupt_function 0004                  _PIE1bits 008C                  _PIR1bits 000C  
__size_of_globalIntEnable 0003            adcInterrupt@en 0075                _ADCON0bits 001F  
              _ADCON1bits 009F      __end_of_adcInterrupt 019A                  _adcSetup 01B7  
        __size_of_oscInit 0075         __CFG_BOR4V$BOR40V 0000             __size_of_main 0032  
       ??_globalIntEnable 0073                _INTCONbits 000B                  intlevel1 0000  
            ?_analogInSel 0070                _OSCCONbits 008F     __size_of_adcInterrupt 0021  
